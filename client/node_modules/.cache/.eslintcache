[{"/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/index.js":"1","/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/state/index.js":"2","/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/App.js":"3","/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/screens/contact.js":"4","/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/screens/about.js":"5","/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/screens/home.js":"6","/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/screens/signup.js":"7","/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/screens/services.js":"8","/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/screens/login.js":"9","/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/navbar.jsx":"10","/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/footer.jsx":"11","/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/carousel.jsx":"12","/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/screens/profile.js":"13","/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/UserImage.jsx":"14","/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/FlexBetween.jsx":"15","/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/WidgetWrapper.jsx":"16","/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/widgets/UserWidget.jsx":"17","/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/Friend.jsx":"18","/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/widgets/MyPostWidget.jsx":"19","/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/widgets/FriendsListWidget.jsx":"20","/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/widgets/PostWidget.jsx":"21","/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/widgets/PostsWidget.jsx":"22"},{"size":1149,"mtime":1695441411200,"results":"23","hashOfConfig":"24"},{"size":1819,"mtime":1696607780673,"results":"25","hashOfConfig":"24"},{"size":1217,"mtime":1696238909613,"results":"26","hashOfConfig":"24"},{"size":4793,"mtime":1695427795130,"results":"27","hashOfConfig":"24"},{"size":9940,"mtime":1695427795129,"results":"28","hashOfConfig":"24"},{"size":1972,"mtime":1696054891325,"results":"29","hashOfConfig":"24"},{"size":9537,"mtime":1695562391028,"results":"30","hashOfConfig":"24"},{"size":4553,"mtime":1695427795131,"results":"31","hashOfConfig":"24"},{"size":6265,"mtime":1695446448911,"results":"32","hashOfConfig":"24"},{"size":7653,"mtime":1696600353505,"results":"33","hashOfConfig":"24"},{"size":6669,"mtime":1695427795129,"results":"34","hashOfConfig":"24"},{"size":7058,"mtime":1688138643800,"results":"35","hashOfConfig":"24"},{"size":2013,"mtime":1696240490744,"results":"36","hashOfConfig":"24"},{"size":377,"mtime":1695561907785,"results":"37","hashOfConfig":"24"},{"size":220,"mtime":1695545236986,"results":"38","hashOfConfig":"24"},{"size":261,"mtime":1695556323491,"results":"39","hashOfConfig":"24"},{"size":4000,"mtime":1696426535314,"results":"40","hashOfConfig":"24"},{"size":6148,"mtime":1696601671690,"results":"41","hashOfConfig":"24"},{"size":4614,"mtime":1697272807032,"results":"42","hashOfConfig":"43"},{"size":1743,"mtime":1696241508894,"results":"44","hashOfConfig":"24"},{"size":4617,"mtime":1697272144217,"results":"45","hashOfConfig":"24"},{"size":2224,"mtime":1696053455639,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"7535sc",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1cqjufn",{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"50"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"50"},"/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/index.js",[],[],[],"/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/state/index.js",[],[],"/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/App.js",[],[],"/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/screens/contact.js",[],[],"/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/screens/about.js",[],[],"/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/screens/home.js",[],[],"/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/screens/signup.js",["119","120","121","122","123","124","125"],[],"import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Navbar from '../components/navbar';\nimport Footer from '../components/footer';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport Dropzone from 'react-dropzone';\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\nimport {\n  Box,\n  Button,\n  TextField,\n  useMediaQuery,\n  Typography,\n  useTheme,\n} from '@mui/material';\n\nconst currentYear = new Date().getFullYear();\n\nexport default function Signup() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [credentials, setCredentials] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    location: '',\n    occupation: '',\n    picture: null, // Use null instead of an empty string\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    for (let value in credentials) {\n      formData.append(value, credentials[value]);\n    }\n    formData.append('picturePath', credentials.picture.name);\n\n    try {\n      const response = await fetch('http://localhost:4000/auth/register', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data); // Handle success response\n        navigate('/');\n        alert('Yay! Your Account has been Created Successful.');\n      } else if (response.status === 409) {\n        alert('User already exists, Login now'); // User exists alert\n      } else {\n        alert('Enter correct E-mail ID or Password');\n        throw new Error('Failed to create user');\n      }\n    } catch (error) {\n      console.error(error); // Handle error\n    }\n  };\n\n  const onChange = (e) => {\n    if (e.target.name === 'picture') {\n      // Handle file input\n      setCredentials({ ...credentials, picture: e.target.files[0] });\n    } else {\n      setCredentials({ ...credentials, [e.target.name]: e.target.value });\n    }\n  };\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\n        <div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\n          <img\n            className=\"mx-auto h-10 w-auto\"\n            src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\n            alt=\"Your Company\"\n          />\n          <h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\n            Create your account\n          </h2>\n        </div>\n\n        <div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\n          <form className=\"space-y-6\" onSubmit={handleSubmit}>\n            <div>\n              <label htmlFor='text' className=\"block text-sm font-medium leading-6 text-gray-900\">\n                First Name\n              </label>\n              <div className=\"mt-2\">\n                <input\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  type=\"text\"\n                  value={credentials.firstName}\n                  onChange={onChange}\n                  required\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                />\n              </div>\n            </div>\n            <div>\n              <label htmlFor='text' className=\"block text-sm font-medium leading-6 text-gray-900\">\n                Last Name\n              </label>\n              <div className=\"mt-2\">\n                <input\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  type=\"text\"\n                  value={credentials.lastName}\n                  onChange={onChange}\n                  required\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                />\n              </div>\n            </div>\n            <div>\n              <label htmlFor='text' className=\"block text-sm font-medium leading-6 text-gray-900\">\n                Location\n              </label>\n              <div className=\"mt-2\">\n                <input\n                  id=\"location\"\n                  name=\"location\"\n                  type=\"text\"\n                  value={credentials.location}\n                  onChange={onChange}\n                  required\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                />\n              </div>\n            </div>\n            <div>\n              <label htmlFor='text' className=\"block text-sm font-medium leading-6 text-gray-900\">\n                Occupation\n              </label>\n              <div className=\"mt-2\">\n                <input\n                  id=\"occupation\"\n                  name=\"occupation\"\n                  type=\"text\"\n                  value={credentials.occupation}\n                  onChange={onChange}\n                  required\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                />\n              </div>\n            </div>\n            <label htmlFor='file' className=\"block text-sm font-medium leading-6 text-gray-900\">\n              Profile Photo\n            </label>\n            <Box\n              gridColumn=\"span 4\"\n              border={`1px solid`}\n              borderRadius=\"5px\"\n              p=\"1rem\"\n            >\n              <Dropzone\n                acceptedFiles=\".jpg,.jpeg,.png\"\n                multiple={false}\n                onDrop={(acceptedFiles) => {\n                  setCredentials({ ...credentials, picture: acceptedFiles[0] });\n                }}\n              >\n                {({ getRootProps, getInputProps }) => (\n                  <Box\n                    {...getRootProps()}\n                    border={`2px dashed`}\n                    p=\"1rem\"\n                    sx={{ '&:hover': { cursor: 'pointer' } }}\n                  >\n                    <input {...getInputProps()} />\n                    {!credentials.picture ? (\n                      <p>Add Profile Picture Here</p>\n                    ) : (\n                      <div>\n                        <Typography>{credentials.picture.name}</Typography>\n                        <EditOutlinedIcon />\n                      </div>\n                    )}\n                  </Box>\n                )}\n              </Dropzone>\n            </Box>\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                Email address\n              </label>\n              <div className=\"mt-2\">\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={credentials.email}\n                  onChange={onChange}\n                  autoComplete=\"email\"\n                  required\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                />\n              </div>\n            </div>\n            <div>\n              <div className=\"flex items-center justify-between\">\n                <label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                  Password\n                </label>\n                <div className=\"text-sm\">\n                  <a href=\"#\" className=\"font-semibold text-indigo-600 hover:text-indigo-500\">\n                    Forgot password?\n                  </a>\n                </div>\n              </div>\n              <div className=\"mt-2\">\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={credentials.password}\n                  onChange={onChange}\n                  autoComplete=\"current-password\"\n                  required\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                />\n              </div>\n            </div>\n            <div>\n              <button\n                type=\"submit\"\n                className=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n              >\n                Create Now\n              </button>\n              <p className='block text-sm font-medium leading-6 text-gray-900 py-2'>Already have an account?<Link to=\"/\" className='font-semibold text-indigo-600'> Log in now</Link></p>\n            </div>\n          </form>\n          <p className=\"mt-5 mb-3 text-body-secondary\">© {currentYear}, All rights reserved</p>\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n","/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/screens/services.js",[],[],"/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/screens/login.js",["126","127","128","129","130","131"],[],"import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Navbar from '../components/navbar';\nimport Footer from '../components/footer';\nimport EditOutlinedIcon from \"@mui/icons-material/EditOutlined\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport { setLogin } from \"../state/index.js\";\nimport { useDispatch } from \"react-redux\";\nimport Dropzone from \"react-dropzone\";\n\nconst currentYear = new Date().getFullYear();\n\n\nexport default function Login() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [credentials, setCredentials] = useState({\n    email: '',\n    password: '',\n  });\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:4000/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email: credentials.email, password: credentials.password }),\n      });\n      const loggedIn = await response.json();\n      if (response.ok) {\n        // const data = await response.json();\n        console.log(loggedIn); // Handle success response\n        // localStorage.setItem('userEmail', credentials.email);\n        // localStorage.setItem('token', data.token);\n        dispatch(\n          setLogin({\n            user: loggedIn.user,\n            token: loggedIn.token,\n          })\n        );\n\n\n        // Set showAlert to true to show the Bootstrap modal\n        alert(\"Login Successful\")\n        navigate('/home');\n      } else {\n        throw new Error('Failed to login user');\n      }\n    } catch (error) {\n      console.error(error); // Handle error\n    }\n  };\n\n  const onChange = (e) => {\n    setCredentials({ ...credentials, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <>\n      <Navbar />\n      <div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\n        <div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\n          <img\n            className=\"mx-auto h-10 w-auto\"\n            src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\n            alt=\"Your Company\"\n          />\n          <h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\n            Log in to your account\n          </h2>\n        </div>\n\n        <div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\n          <form className=\"space-y-6\" onSubmit={handleSubmit}>\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                Email address\n              </label>\n              <div className=\"mt-2\">\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  value={credentials.email}\n                  onChange={onChange}\n                  autoComplete=\"email\"\n                  required\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <div className=\"flex items-center justify-between\">\n                <label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                  Password\n                </label>\n                <div className=\"text-sm\">\n                  <a href=\"#\" className=\"font-semibold text-indigo-600 hover:text-indigo-500\">\n                    Forgot password?\n                  </a>\n                </div>\n              </div>\n              <div className=\"mt-2\">\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  value={credentials.password}\n                  onChange={onChange}\n                  autoComplete=\"current-password\"\n                  required\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                />\n              </div>\n            </div>\n\n            <div>\n              <button\n                type=\"submit\"\n                className=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n              >\n                Log in\n              </button>\n              <p className=\"block text-sm font-medium leading-6 text-gray-900 py-2\">\n                Don't have an account?<Link to=\"/signup\" className=\"font-semibold text-indigo-600\"> Sign up now</Link>\n              </p>\n            </div>\n          </form>\n        </div>\n\n        {/* Bootstrap Modal for Custom Alert */}\n        {showAlert && (\n          <div className=\"modal fade\" id=\"exampleModalCenter\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalCenterTitle\" aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title\" id=\"exampleModalLongTitle\">Login Successful</h5>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={() => setShowAlert(false)}>\n                    <span aria-hidden=\"true\">&times;</span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  Your login was successful.\n                </div>\n                <div className=\"modal-footer\">\n                  <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={() => setShowAlert(false)}>Close</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n      </div>\n      <Footer />\n    </>\n  );\n}\n","/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/navbar.jsx",[],[],"/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/footer.jsx",["132","133","134"],[],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nexport default function Footer() {\n  const currentYear = new Date().getFullYear();\n  const bgColor = {\n    backgroundColor: \"#f0f4f8\",\n}\n  return (\n    <div style={bgColor}>\n      <div className=\"container-fluid\">\n        <hr ></hr>\n        <footer className=\"py-5\">\n          <Link\n            to=\"/\"\n            className=\"d-inline-flex link-body-emphasis text-decoration-none\"\n          >\n            <img src=\"/logo-removebg-preview.png\" alt=\"Logo\" width={180} height={180}></img>\n            <span class=\"text-indigo-600 font-semibold \" style={{ fontSize: \"100px \"}}>कृषि-मित्र</span>\n          </Link> \n          <div className=\"row\">\n            <div className=\"col-6 col-md-2 mb-3\">\n              <h5 className=\"mb-2 font-semibold\">Section</h5>\n              <ul className=\"nav flex-column\">\n                <li className=\"nav-item mb-2\">\n                  <a href=\"/\" className=\"nav-link p-0 text-body-secondary\">\n                    Home\n                  </a>\n                </li>\n                <li className=\"nav-item mb-2\">\n                  <a href=\"/about\" className=\"nav-link p-0 text-body-secondary\">\n                    About\n                  </a>\n                </li>\n                <li className=\"nav-item mb-2\">\n                  <a href=\"/services\" className=\"nav-link p-0 text-body-secondary\">\n                    Services\n                  </a>\n                </li>\n                <li className=\"nav-item mb-2\">\n                  <a href=\"/contact\" className=\"nav-link p-0 text-body-secondary\">\n                    Contact\n                  </a>\n                </li>\n                <li className=\"nav-item mb-2\">\n                  <a href=\"https://hardikdaim.netlify.app\" className=\"nav-link p-0 text-body-secondary\">\n                    My Website\n                  </a>\n                </li>\n              </ul>\n            </div>\n            <div className=\"col-6 col-md-2 mb-3\">\n              <h5 className=\"mb-2 font-semibold\">Section</h5>\n              <ul className=\"nav flex-column\">\n                <li className=\"nav-item mb-2\">\n                  <a href=\"/\" className=\"nav-link p-0 text-body-secondary\">\n                    Home\n                  </a>\n                </li>\n                <li className=\"nav-item mb-2\">\n                  <a href=\"/about\" className=\"nav-link p-0 text-body-secondary\">\n                    About\n                  </a>\n                </li>\n                <li className=\"nav-item mb-2\">\n                  <a href=\"/services\" className=\"nav-link p-0 text-body-secondary\">\n                    Services\n                  </a>\n                </li>\n                <li className=\"nav-item mb-2\">\n                  <a href=\"/contact\" className=\"nav-link p-0 text-body-secondary\">\n                    Contact\n                  </a>\n                </li>\n                <li className=\"nav-item mb-2\">\n                  <a href=\"https://hardikdaim.netlify.app\" className=\"nav-link p-0 text-body-secondary\">\n                    My Website\n                  </a>\n                </li>\n              </ul>\n            </div>\n            <div className=\"col-6 col-md-2 mb-3\">\n              <h5 className=\"mb-2 font-semibold\">Section</h5>\n              <ul className=\"nav flex-column\">\n                <li className=\"nav-item mb-2\">\n                  <a href=\"/\" className=\"nav-link p-0 text-body-secondary\">\n                    Home\n                  </a>\n                </li>\n                <li className=\"nav-item mb-2\">\n                  <a href=\"/about\" className=\"nav-link p-0 text-body-secondary\">\n                    About\n                  </a>\n                </li>\n                <li className=\"nav-item mb-2\">\n                  <a href=\"/services\" className=\"nav-link p-0 text-body-secondary\">\n                    Services\n                  </a>\n                </li>\n                <li className=\"nav-item mb-2\">\n                  <a href=\"/contact\" className=\"nav-link p-0 text-body-secondary\">\n                    Contact\n                  </a>\n                </li>\n                <li className=\"nav-item mb-2\">\n                  <a href=\"https://hardikdaim.netlify.app\" className=\"nav-link p-0 text-body-secondary\">\n                    My Website\n                  </a>\n                </li>\n              </ul>\n            </div>\n            <div className=\"col-md-5 offset-md-1 mb-3\">\n              <form>\n                <h5>Subscribe to our newsletter</h5>\n                <p>Monthly digest of what's new and exciting from us.</p>\n                <div className=\"d-flex flex-column flex-sm-row w-100 gap-2\">\n                  <label htmlFor=\"newsletter1\" className=\"visually-hidden\">\n                    Email address\n                  </label>\n                  <input\n                    id=\"newsletter1\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Email address\"\n                  />\n                  <button\n                    className=\"justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n                    type=\"button\"\n                  >\n                    Subscribe\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n          <div className=\"d-flex flex-column flex-sm-row justify-content-between pt-4 mt-4 border-top\">\n            <p>© {currentYear} कृषि-मित्र, Inc. All rights reserved.</p>\n            <ul className=\"list-unstyled d-flex\">\n              <li className=\"ms-3\">\n                <a className=\"link-body-emphasis\" href=\"#\">\n                  <svg className=\"bi\" width={24} height={24}>\n                    <use xlinkHref=\"#twitter\" />\n                  </svg>\n                </a>\n              </li>\n              <li className=\"ms-3\">\n                <a className=\"link-body-emphasis\" href=\"#\">\n                  <svg className=\"bi\" width={24} height={24}>\n                    <use xlinkHref=\"#instagram\" />\n                  </svg>\n                </a>\n              </li>\n              <li className=\"ms-3\">\n                <a className=\"link-body-emphasis\" href=\"#\">\n                  <svg className=\"bi\" width={24} height={24}>\n                    <use xlinkHref=\"#facebook\" />\n                  </svg>\n                </a>\n              </li>\n            </ul>\n          </div>\n        </footer>\n      </div>\n    </div>\n  );\n}\n","/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/carousel.jsx",["135","136","137"],[],"/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/screens/profile.js",[],["138"],"/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/UserImage.jsx",[],[],"/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/FlexBetween.jsx",[],[],"/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/WidgetWrapper.jsx",[],[],"/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/widgets/UserWidget.jsx",[],["139"],"/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/Friend.jsx",["140"],[],"/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/widgets/MyPostWidget.jsx",["141"],[],"/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/widgets/FriendsListWidget.jsx",["142"],["143"],"import { Box, Divider, Typography, useTheme } from \"@mui/material\";\nimport Friend from \"../Friend\";\nimport WidgetWrapper from \"../WidgetWrapper\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setFriends } from \"../../state/index.js\";\n\nconst FriendListWidget = ({ userId }) => {\n  const dispatch = useDispatch();\n  const token = useSelector((state) => state.token);\n  const friends = useSelector((state) => state.user.friends);\n\n  const getFriends = async () => {\n    const response = await fetch(\n      `http://localhost:4000/users/${userId}/friends`,\n      {\n        method: \"GET\",\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    );\n    const data = await response.json();\n    dispatch(setFriends({ friends: data }));\n  };\n\n  useEffect(() => {\n    getFriends();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <WidgetWrapper>\n      <Typography\n        variant=\"h5\"\n        fontWeight=\"500\"\n        sx={{ mb: \"1.5rem\" }}\n      >\n        Expert's List for you\n      <Divider />\n      </Typography>\n      {friends && friends.length > 0 ? (\n        <Box display=\"flex\" flexDirection=\"column\" gap=\"1.5rem\">\n          {friends.map((friend) => (\n            <Friend\n              key={friend._id}\n              friendId={friend._id}\n              name={`${friend.firstName} ${friend.lastName}`}\n              subtitle={friend.occupation}\n              userPicturePath={friend.picturePath}\n            />\n          ))}\n        </Box>\n      ) : (\n        <Typography variant=\"body1\" color=\"textSecondary\">\n          You havn't Subscribed to Experts Yet !\n        </Typography>\n      )}\n    </WidgetWrapper>\n  );\n};\n\nexport default FriendListWidget;\n","/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/widgets/PostWidget.jsx",["144","145"],[],"/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/widgets/PostsWidget.jsx",["146"],[],"import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPosts } from \"../../state/index.js\";\nimport PostWidget from \"./PostWidget\";\n\nconst PostsWidget = ({ userId, isProfile = false }) => {\n  const dispatch = useDispatch();\n  const posts = useSelector((state) => state.posts);\n  const token = useSelector((state) => state.token);\n\n  const getPosts = async () => {\n    try {\n      const response = await fetch(\"http://localhost:4000/posts\", {\n        method: \"GET\",\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch posts\");\n      }\n      const data = await response.json();\n      dispatch(setPosts({ posts: data }));\n    } catch (error) {\n      console.error(\"Error fetching posts:\", error);\n    }\n  };\n\n  const getUserPosts = async () => {\n    try {\n      const response = await fetch(\n        `http://localhost:4000/posts/${userId}/posts`,\n        {\n          method: \"GET\",\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch user posts\");\n      }\n      const data = await response.json();\n      dispatch(setPosts({ posts: data }));\n    } catch (error) {\n      console.error(\"Error fetching user posts:\", error);\n    }\n  };\n\n  useEffect(() => {\n    if (isProfile) {\n      getUserPosts();\n    } else {\n      getPosts();\n    }\n  }, [isProfile, userId, token]); // Add dependencies for the useEffect\n\n  return (\n    <>\n      {posts.map(\n        ({\n          _id,\n          userId,\n          firstName,\n          lastName,\n          description,\n          location,\n          picturePath,\n          userPicturePath,\n          likes,\n          comments,\n        }) => (\n          <PostWidget\n            key={_id}\n            postId={_id}\n            postUserId={userId}\n            name={`${firstName} ${lastName}`}\n            description={description}\n            location={location}\n            picturePath={picturePath}\n            userPicturePath={userPicturePath}\n            likes={likes}\n            comments={comments}\n          />\n        )\n      )}\n    </>\n  );\n};\n\nexport default PostsWidget;\n",{"ruleId":"147","severity":1,"message":"148","line":5,"column":13,"nodeType":"149","messageId":"150","endLine":5,"endColumn":16},{"ruleId":"147","severity":1,"message":"151","line":11,"column":3,"nodeType":"149","messageId":"150","endLine":11,"endColumn":9},{"ruleId":"147","severity":1,"message":"152","line":12,"column":3,"nodeType":"149","messageId":"150","endLine":12,"endColumn":12},{"ruleId":"147","severity":1,"message":"153","line":13,"column":3,"nodeType":"149","messageId":"150","endLine":13,"endColumn":16},{"ruleId":"147","severity":1,"message":"154","line":15,"column":3,"nodeType":"149","messageId":"150","endLine":15,"endColumn":11},{"ruleId":"147","severity":1,"message":"155","line":22,"column":9,"nodeType":"149","messageId":"150","endLine":22,"endColumn":17},{"ruleId":"156","severity":1,"message":"157","line":212,"column":19,"nodeType":"158","endLine":212,"endColumn":95},{"ruleId":"147","severity":1,"message":"159","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":24},{"ruleId":"147","severity":1,"message":"160","line":6,"column":10,"nodeType":"149","messageId":"150","endLine":6,"endColumn":16},{"ruleId":"147","severity":1,"message":"148","line":7,"column":13,"nodeType":"149","messageId":"150","endLine":7,"endColumn":16},{"ruleId":"147","severity":1,"message":"161","line":10,"column":8,"nodeType":"149","messageId":"150","endLine":10,"endColumn":16},{"ruleId":"147","severity":1,"message":"162","line":12,"column":7,"nodeType":"149","messageId":"150","endLine":12,"endColumn":18},{"ruleId":"156","severity":1,"message":"157","line":104,"column":19,"nodeType":"158","endLine":104,"endColumn":95},{"ruleId":"156","severity":1,"message":"157","line":139,"column":17,"nodeType":"158","endLine":139,"endColumn":60},{"ruleId":"156","severity":1,"message":"157","line":146,"column":17,"nodeType":"158","endLine":146,"endColumn":60},{"ruleId":"156","severity":1,"message":"157","line":153,"column":17,"nodeType":"158","endLine":153,"endColumn":60},{"ruleId":"156","severity":1,"message":"157","line":58,"column":37,"nodeType":"158","endLine":58,"endColumn":296},{"ruleId":"156","severity":1,"message":"157","line":85,"column":37,"nodeType":"158","endLine":85,"endColumn":296},{"ruleId":"156","severity":1,"message":"157","line":112,"column":37,"nodeType":"158","endLine":112,"endColumn":296},{"ruleId":"163","severity":1,"message":"164","line":29,"column":6,"nodeType":"165","endLine":29,"endColumn":8,"suggestions":"166","suppressions":"167"},{"ruleId":"163","severity":1,"message":"164","line":31,"column":6,"nodeType":"165","endLine":31,"endColumn":8,"suggestions":"168","suppressions":"169"},{"ruleId":"147","severity":1,"message":"170","line":77,"column":11,"nodeType":"149","messageId":"150","endLine":77,"endColumn":15},{"ruleId":"147","severity":1,"message":"154","line":15,"column":3,"nodeType":"149","messageId":"150","endLine":15,"endColumn":11},{"ruleId":"147","severity":1,"message":"154","line":1,"column":36,"nodeType":"149","messageId":"150","endLine":1,"endColumn":44},{"ruleId":"163","severity":1,"message":"171","line":27,"column":6,"nodeType":"165","endLine":27,"endColumn":8,"suggestions":"172","suppressions":"173"},{"ruleId":"147","severity":1,"message":"154","line":7,"column":48,"nodeType":"149","messageId":"150","endLine":7,"endColumn":56},{"ruleId":"147","severity":1,"message":"174","line":36,"column":20,"nodeType":"149","messageId":"150","endLine":36,"endColumn":31},{"ruleId":"163","severity":1,"message":"175","line":52,"column":6,"nodeType":"165","endLine":52,"endColumn":32,"suggestions":"176"},"no-unused-vars","'yup' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'TextField' is defined but never used.","'useMediaQuery' is defined but never used.","'useTheme' is defined but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'EditOutlinedIcon' is defined but never used.","'Formik' is defined but never used.","'Dropzone' is defined but never used.","'currentYear' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["177"],["178"],["179"],["180"],"'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getFriends'. Either include it or remove the dependency array.",["181"],["182"],"'setComments' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPosts' and 'getUserPosts'. Either include them or remove the dependency array.",["183"],{"desc":"184","fix":"185"},{"kind":"186","justification":"187"},{"desc":"184","fix":"188"},{"kind":"186","justification":"187"},{"desc":"189","fix":"190"},{"kind":"186","justification":"187"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [getUser]",{"range":"193","text":"194"},"directive","",{"range":"195","text":"194"},"Update the dependencies array to be: [getFriends]",{"range":"196","text":"197"},"Update the dependencies array to be: [isProfile, userId, token, getUserPosts, getPosts]",{"range":"198","text":"199"},[1058,1060],"[getUser]",[922,924],[841,843],"[getFriends]",[1453,1479],"[isProfile, userId, token, getUserPosts, getPosts]"]