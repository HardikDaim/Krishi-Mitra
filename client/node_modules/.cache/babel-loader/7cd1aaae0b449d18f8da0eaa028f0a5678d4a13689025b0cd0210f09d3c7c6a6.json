{"ast":null,"code":"var _jsxFileName = \"/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/widgets/PostsWidget.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPosts } from \"../../state/index.js\";\nimport PostWidget from \"./PostWidget\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostsWidget = ({\n  userId,\n  isProfile = false\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts);\n  const token = useSelector(state => state.token);\n  const getPosts = async () => {\n    try {\n      const response = await fetch(\"http://localhost:4000/posts\", {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch posts\");\n      }\n      const data = await response.json();\n      const reversedData = data.reverse();\n      dispatch(setPosts({\n        posts: reversedData\n      }));\n    } catch (error) {\n      console.error(\"Error fetching posts:\", error);\n    }\n  };\n  const getUserPosts = async () => {\n    try {\n      const response = await fetch(`http://localhost:4000/posts/${userId}/posts`, {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch user posts\");\n      }\n      const data = await response.json();\n      const reversedData = data.reverse();\n      dispatch(setPosts({\n        posts: reversedData\n      }));\n    } catch (error) {\n      console.error(\"Error fetching user posts:\", error);\n    }\n  };\n  useEffect(() => {\n    if (isProfile) {\n      getUserPosts();\n    } else {\n      getPosts();\n    }\n  }, [isProfile, userId, token]); // Add dependencies for the useEffect\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts.map(({\n      _id,\n      userId,\n      firstName,\n      lastName,\n      description,\n      location,\n      picturePath,\n      userPicturePath,\n      likes,\n      comments\n    }) => /*#__PURE__*/_jsxDEV(PostWidget, {\n      postId: _id,\n      postUserId: userId,\n      name: `${firstName} ${lastName}`,\n      description: description,\n      location: location,\n      picturePath: picturePath,\n      userPicturePath: userPicturePath,\n      likes: likes,\n      comments: comments\n    }, _id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n};\n_s(PostsWidget, \"7TqOh3V0nCSP3QUJlbitnmq7L8o=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = PostsWidget;\nexport default PostsWidget;\nvar _c;\n$RefreshReg$(_c, \"PostsWidget\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","setPosts","PostWidget","jsxDEV","_jsxDEV","Fragment","_Fragment","PostsWidget","userId","isProfile","_s","dispatch","posts","state","token","getPosts","response","fetch","method","headers","Authorization","ok","Error","data","json","reversedData","reverse","error","console","getUserPosts","children","map","_id","firstName","lastName","description","location","picturePath","userPicturePath","likes","comments","postId","postUserId","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hardikdaim/Desktop/Krishi-Mitra/client/src/components/widgets/PostsWidget.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPosts } from \"../../state/index.js\";\nimport PostWidget from \"./PostWidget\";\n\nconst PostsWidget = ({ userId, isProfile = false }) => {\n  const dispatch = useDispatch();\n  const posts = useSelector((state) => state.posts);\n  const token = useSelector((state) => state.token);\n\n  const getPosts = async () => {\n    try {\n      const response = await fetch(\"http://localhost:4000/posts\", {\n        method: \"GET\",\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch posts\");\n      }\n      const data = await response.json();\n      const reversedData = data.reverse();\n      dispatch(setPosts({ posts: reversedData }));\n    } catch (error) {\n      console.error(\"Error fetching posts:\", error);\n    }\n  };\n\n  const getUserPosts = async () => {\n    try {\n      const response = await fetch(\n        `http://localhost:4000/posts/${userId}/posts`,\n        {\n          method: \"GET\",\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch user posts\");\n      }\n      const data = await response.json();\n      const reversedData = data.reverse();\n      dispatch(setPosts({ posts: reversedData }));\n    } catch (error) {\n      console.error(\"Error fetching user posts:\", error);\n    }\n  };\n\n  useEffect(() => {\n    if (isProfile) {\n      getUserPosts();\n    } else {\n      getPosts();\n    }\n  }, [isProfile, userId, token]); // Add dependencies for the useEffect\n\n  return (\n    <>\n      {posts.map(\n        ({\n          _id,\n          userId,\n          firstName,\n          lastName,\n          description,\n          location,\n          picturePath,\n          userPicturePath,\n          likes,\n          comments,\n        }) => (\n          <PostWidget\n            key={_id}\n            postId={_id}\n            postUserId={userId}\n            name={`${firstName} ${lastName}`}\n            description={description}\n            location={location}\n            picturePath={picturePath}\n            userPicturePath={userPicturePath}\n            likes={likes}\n            comments={comments}\n          />\n        )\n      )}\n    </>\n  );\n};\n\nexport default PostsWidget;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}